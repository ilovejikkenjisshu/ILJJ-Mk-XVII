name: deploy gcp using terraform

on:
  push:
    branches:
      - main


defaults:
  run:
    working-directory: ./

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      initial-command: ${{ steps.filter.outputs.initial-command }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            initial-command:
              - 'initial/**'
  initial-command:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.initial-command == 'true' }}
    defaults:
      run:
        working-directory: initial
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
      - run: npm install
      - run: node append-command.js
        env:
          DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
          DISCORD_GUILD: ${{ secrets.DISCORD_GUILD }}
  terraform-workflow:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v3
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
          create_credentials_file: true
          workload_identity_provider: 'projects/${{ vars.PROJECT_ID }}/locations/global/workloadIdentityPools/${{ vars.POOL_ID }}/providers/${{ vars.PROVIDER_ID }}'
          service_account: '${{ vars.SERVICE_ACCOUNT_EMAIL }}'
      - uses: hashicorp/setup-terraform@v2
      - name: Set terraform valiables
        run: |-
          echo "TF_VAR_bucket_name=${{ vars.BUCKET_NAME }}" >> $GITHUB_ENV
          echo "TF_VAR_project_id=${{ vars.PROJECT_ID }}" >> $GITHUB_ENV
          echo "TF_VAR_region=${{ vars.REGION }}" >> $GITHUB_ENV
          echo "TF_VAR_client_public_key=${{ vars.CLIENT_PUBLIC_KEY }}" >> $GITHUB_ENV
          echo "TF_VAR_credentials_file=${{ steps.auth.outputs.credentials_file_path }}" >> $GITHUB_ENV
      - name: Terraform Init
        run: terraform init -backend-config="bucket=${{ vars.BUCKET_NAME }}" -backend-config="prefix=terraform/state"
      - name: Validate Terraform
        run: terraform validate
      - name: Terraform Plan
        id: plan
        run: terraform plan
      - name: Terraform Apply
        run: terraform apply -auto-approve
